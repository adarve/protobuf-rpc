#!/usr/bin/python2.4
# Generated by the protocol buffer compiler.  DO NOT EDIT!

from google.protobuf import descriptor
from google.protobuf import message
from google.protobuf import reflection
from google.protobuf import service
from google.protobuf import service_reflection
from google.protobuf import descriptor_pb2



_ECHOREQUEST = descriptor.Descriptor(
  name='EchoRequest',
  full_name='test.EchoRequest',
  filename='test.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='text', full_name='test.EchoRequest.text', index=0,
      number=1, type=9, cpp_type=9, label=2,
      default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_ECHORESPONSE = descriptor.Descriptor(
  name='EchoResponse',
  full_name='test.EchoResponse',
  filename='test.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='text', full_name='test.EchoResponse.text', index=0,
      number=1, type=9, cpp_type=9, label=2,
      default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_PINGREQUEST = descriptor.Descriptor(
  name='PingRequest',
  full_name='test.PingRequest',
  filename='test.proto',
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_PINGRESPONSE = descriptor.Descriptor(
  name='PingResponse',
  full_name='test.PingResponse',
  filename='test.proto',
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)



class EchoRequest(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _ECHOREQUEST

class EchoResponse(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _ECHORESPONSE

class PingRequest(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _PINGREQUEST

class PingResponse(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _PINGRESPONSE


_ECHOTEST = descriptor.ServiceDescriptor(
  name='EchoTest',
  full_name='test.EchoTest',
  index=0,
  options=None,
  methods=[
  descriptor.MethodDescriptor(
    name='Echo',
    full_name='test.EchoTest.Echo',
    index=0,
    containing_service=None,
    input_type=_ECHOREQUEST,
    output_type=_ECHORESPONSE,
    options=None,
  ),
])

class EchoTest(service.Service):
  __metaclass__ = service_reflection.GeneratedServiceType
  DESCRIPTOR = _ECHOTEST
class EchoTest_Stub(EchoTest):
  __metaclass__ = service_reflection.GeneratedServiceStubType
  DESCRIPTOR = _ECHOTEST


_PINGTEST = descriptor.ServiceDescriptor(
  name='PingTest',
  full_name='test.PingTest',
  index=1,
  options=None,
  methods=[
  descriptor.MethodDescriptor(
    name='Ping',
    full_name='test.PingTest.Ping',
    index=0,
    containing_service=None,
    input_type=_PINGREQUEST,
    output_type=_PINGRESPONSE,
    options=None,
  ),
])

class PingTest(service.Service):
  __metaclass__ = service_reflection.GeneratedServiceType
  DESCRIPTOR = _PINGTEST
class PingTest_Stub(PingTest):
  __metaclass__ = service_reflection.GeneratedServiceStubType
  DESCRIPTOR = _PINGTEST

